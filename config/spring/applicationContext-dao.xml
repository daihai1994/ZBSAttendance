<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    		   http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
               http://www.springframework.org/schema/mvc
       		   http://www.springframework.org/schema/mvc/spring-mvc.xsd
       		   http://www.springframework.org/schema/websocket
			   http://www.springframework.org/schema/websocket/spring-websocket.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context-4.3.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:jdbc/jdbc.properties" />
	<!-- 配置数据源 ，dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />

		<!-- maxWait: 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
		<property name="maxWait" value="5000" />
		<!-- logAbandoned:是否在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) 如果空闲时间超过removeAbandonedTimeout，连接被认为是被泄露并且可以被删除 -->
		<property name="removeAbandonedTimeout" value="90" />
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒 -->
		<!-- <property name="maxWait" value="3000" /> -->

		<!-- 防止数据库认为连接已死而Web应用服务器认为连接还有效的问题 -->
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
	</bean>


	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="mapperLocations"> <array> <value>classpath:cn/metter/mapper/**/*.xml</value> 
			<value>classpath:cn/metter/wechatserver/mapperxml/*.xml</value> <value>classpath:cn/metter/payserver/mapperxml/*.xml</value> 
			</array> </property> -->
	</bean>

<!-- 事务管理器 -->  
<bean id="txManager"  
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
</bean>  
  
<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->  
<tx:annotation-driven transaction-manager="txManager" />  
	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage"
			value="net.zhongbenshuo.attendance.mapper,
		net.zhongbenshuo.attendance.foreground.configInfor.mapper,
		net.zhongbenshuo.attendance.foreground.advertisement.mapper,
		net.zhongbenshuo.attendance.foreground.homePagePicture.mapper,
		net.zhongbenshuo.attendance.foreground.version.mapper,
		net.zhongbenshuo.attendance.foreground.outAttendance.mapper,
		net.zhongbenshuo.attendance.foreground.holidaySetting.mapper,
		net.zhongbenshuo.attendance.foreground.company.mapper,
		net.zhongbenshuo.attendance.foreground.wage.mapper,
		net.zhongbenshuo.attendance.foreground.VisitorSubscribe.mapper,
		net.zhongbenshuo.attendance.foreground.attendanceRecord.mapper,
		net.zhongbenshuo.attendance.foreground.applyRecord.mapper,
		net.zhongbenshuo.attendance.foreground.rule.mapper,
		net.zhongbenshuo.attendance.netty.mapper,
		net.zhongbenshuo.attendance.foreground.announcement.mapper,
		net.zhongbenshuo.attendance.foreground.accountInfo.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>